---
- name: Install K3s dependencies
  apt:
    name:
      - curl
      - wget
    state: present

- name: Download K3s installation script
  get_url:
    url: "https://get.k3s.io"
    dest: /tmp/k3s-install.sh
    mode: '0755'

- name: Set K3s environment variables
  lineinfile:
    path: /etc/environment
    line: "K3S_TOKEN={{ k3s_token }}"
    create: yes

- name: Install K3s master
  shell: |
    INSTALL_K3S_VERSION="{{ k3s_version }}" \
    K3S_TOKEN="{{ k3s_token }}" \
    K3S_CLUSTER_CIDR="{{ k3s_cluster_cidr }}" \
    K3S_SERVICE_CIDR="{{ k3s_service_cidr }}" \
    K3S_CLUSTER_DNS="{{ k3s_cluster_dns }}" \
    K3S_DISABLE="{{ k3s_disable_components | join(',') }}" \
    /tmp/k3s-install.sh server \
    --cluster-init \
    --write-kubeconfig-mode 644 \
    --tls-san {{ k3s_master_ip }}
  when: node_role == 'master'

- name: Install K3s worker
  shell: |
    INSTALL_K3S_VERSION="{{ k3s_version }}" \
    K3S_TOKEN="{{ k3s_token }}" \
    K3S_URL="https://{{ k3s_master_ip }}:6443" \
    /tmp/k3s-install.sh agent
  when: node_role == 'worker'

- name: Wait for K3s to be ready
  wait_for:
    port: 6443
    host: "{{ k3s_master_ip if node_role == 'master' else ansible_host }}"
    delay: 10
    timeout: 300
  when: node_role == 'master'

- name: Create kubeconfig directory
  file:
    path: /home/{{ ansible_user }}/.kube
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
  when: node_role == 'master'

- name: Copy kubeconfig to user home
  copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: /home/{{ ansible_user }}/.kube/config
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0600'
    remote_src: yes
  when: node_role == 'master'

- name: Update kubeconfig server URL
  replace:
    path: /home/{{ ansible_user }}/.kube/config
    regexp: 'https://127.0.0.1:6443'
    replace: 'https://{{ k3s_master_ip }}:6443'
  when: node_role == 'master'

- name: Install kubectl on master
  copy:
    src: /usr/local/bin/k3s
    dest: /usr/local/bin/kubectl
    mode: '0755'
    remote_src: yes
  when: node_role == 'master'

- name: Create kubectl symlink
  file:
    src: /usr/local/bin/k3s
    dest: /usr/local/bin/kubectl
    state: link
  when: node_role == 'master'

- name: Verify K3s installation
  command: kubectl get nodes
  become_user: "{{ ansible_user }}"
  register: k3s_status
  changed_when: false
  when: node_role == 'master'

- name: Display K3s status
  debug:
    var: k3s_status.stdout_lines
  when: node_role == 'master'

- name: Enable and start K3s service
  systemd:
    name: k3s
    enabled: yes
    state: started

- name: Wait for K3s service to be active
  systemd:
    name: k3s
    state: started
  register: k3s_service_status
  until: k3s_service_status.status.ActiveState == "active"
  retries: 30
  delay: 10
